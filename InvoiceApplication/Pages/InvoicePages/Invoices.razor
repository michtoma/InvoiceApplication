@page "/invoices"
@inject IInvoiceService _invoiceService
@inject NavigationManager navigationManager

<PageTitle>Invoice List</PageTitle>
<AuthorizeView>
     <ChildContent Context="gridContext">
         
        <h3>Invoice List</h3>
        <a class="btn btn-outline-primary" href="invoiceAction">Add New</a>
        @if (invoices == null)
        {
            <p>Loading .... </p>
        }
        else
        {
            <QuickGrid Items="invoices.AsQueryable()" Pagination="paginationState" ResizableColumns="true" >

                    <PropertyColumn Property="@(i=>i.Number)" Sortable="true"></PropertyColumn>
                    <PropertyColumn Property="@(i=>i.CreateDate)" Format="dd-MM-yyyy" Title="Create date" Sortable="true"></PropertyColumn>
                    <PropertyColumn Property="@(i=>i.DateOfIssue)" Format="dd-MM-yyyy" Sortable="true"></PropertyColumn>
                    <PropertyColumn Property="@(i=>i.TotaNetlValue)" Format="0.00 zł" Sortable="true"></PropertyColumn>
                    <PropertyColumn Property="@(i=>i.TotalGrossValue)" Format="0.00 zł" Sortable="true"></PropertyColumn>
                    <PropertyColumn Property="@(i=>i.PaymentDate)" Format="dd-MM-yyyy" Sortable="true"></PropertyColumn>
                    <PropertyColumn Property="@(i=>i.IsPaid)" Sortable="true"></PropertyColumn>
                    <TemplateColumn Title="Action Buttons">
                        <button class="btn btn-danger" @onclick="(d=> ShowInvoiceDetails(context.Id))">View</button>
                        <button class="btn btn-dark" @onclick="(e=> EditInvoice(context.Id))">Edit</button>
                        @if (context.IsEditable)
                        {
                            <button class="btn btn-danger" @onclick="(d=> DeleteInvoice(context.Id))">Delete</button>
                        }
                    </TemplateColumn>
            </QuickGrid>
            <Paginator Value="paginationState" />
        }

     </ChildContent>
</AuthorizeView>

@code {

    bool isVisible = false;
    private List<Invoice> invoices = new();
    PaginationState paginationState = new PaginationState { ItemsPerPage = 5 };
    protected override async Task OnInitializedAsync()
    {
        invoices = await _invoiceService.GetAllInvoiceAsync();
    }
    private void EditInvoice(int InvoiceId)
    {
        navigationManager.NavigateTo($"invoiceAction/{InvoiceId}");
    }
    private void ShowInvoiceDetails(int InvoiceId)
    {
        navigationManager.NavigateTo($"invoice/{InvoiceId}");
    }
    private async void DeleteInvoice(int InvoiceId)
    {
        var invoiceToDelete = await _invoiceService.GetInvoiceByIdAsync(InvoiceId);
        await _invoiceService.DeleteInvoiceAsync(invoiceToDelete);
        invoices = await _invoiceService.GetAllInvoiceAsync();
        StateHasChanged();
    }
}