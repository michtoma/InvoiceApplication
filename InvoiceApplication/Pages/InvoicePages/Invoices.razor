@page "/invoices"
@inject IInvoiceService InvoiceService
@inject NavigationManager NavigationManager

<PageTitle>Invoice List</PageTitle>
<AuthorizeView>
     <ChildContent Context="gridContext">
         
        <h3>Invoice List</h3>
        <a class="btn btn-outline-primary" href="invoiceAction">Add New</a>
        @if (_invoices == null)
        {
            <p>Loading .... </p>
        }
        else
        {
            <QuickGrid Items="_invoices.AsQueryable()" Pagination="_paginationState" ResizableColumns="true" Class="table table-striped" >

                    <PropertyColumn Property="@(i=>i.Number)" Sortable="true"></PropertyColumn>
                    <PropertyColumn Property="@(i=>i.CreateDate)" Format="dd-MM-yyyy" Title="Create date" Sortable="true"></PropertyColumn>
                    <PropertyColumn Property="@(i=>i.TotaNetlValue)" Format="0.00 zł" Sortable="true"></PropertyColumn>
                    <PropertyColumn Property="@(i=>i.TotalGrossValue)" Format="0.00 zł" Sortable="true"></PropertyColumn>
                    <PropertyColumn Property="@(i=>i.PaymentDate)" Format="dd-MM-yyyy" Sortable="true"></PropertyColumn>
                    <PropertyColumn Property="@(i=>i.IsPaid)" Sortable="true"></PropertyColumn>
                    <TemplateColumn Title="Action Buttons">
                        <button class="btn btn-danger" @onclick="(d=> ShowInvoiceDetails(context.Id))">View</button>
                        <button class="btn btn-dark" @onclick="(e=> EditInvoice(context.Id))">Edit</button>
                    </TemplateColumn>
            </QuickGrid>
            <Paginator Value="_paginationState" />
        }

     </ChildContent>
</AuthorizeView>

@code {

    bool _isVisible = false;
    private List<Invoice> _invoices = new();
    PaginationState _paginationState = new PaginationState { ItemsPerPage = 5 };
    protected override async Task OnInitializedAsync()
    {
        _invoices = await InvoiceService.GetUSerInvoicesAsync();
    }
    private void EditInvoice(int invoiceId)
    {
        NavigationManager.NavigateTo($"invoiceAction/{invoiceId}");
    }
    private void ShowInvoiceDetails(int invoiceId)
    {
        NavigationManager.NavigateTo($"invoice/{invoiceId}");
    }
    private async void DeleteInvoice(int invoiceId)
    {
        var invoiceToDelete = await InvoiceService.GetInvoiceByIdAsync(invoiceId);
        await InvoiceService.DeleteInvoiceAsync(invoiceToDelete);
        _invoices = await InvoiceService.GetUSerInvoicesAsync();
        StateHasChanged();
    }
}