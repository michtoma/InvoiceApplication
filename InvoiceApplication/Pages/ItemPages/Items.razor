@page "/Items"
@inject IItemService Service
@inject IVatRateService VatService

<PageTitle>Items</PageTitle> 
<div class="table-responsive">
    <h3>Items</h3>
    <button class="btn btn-outline-secondary mb-2" @onclick="AddNew">Dodaj Nowy</button>
    <br />
    
        @if (_addNewVisisble)
        {
            <ItemsOperations ItemId="_itemId" IsVisible="_addNewVisisble" OnClickClose="ClickHandler"></ItemsOperations>
        }
        @if (_items is null)
        {
            <p>Look like is nothing to show</p>
        }
        else if (_items.Count() == 0)
        {
            <p>        Loading ....    </p>
        }
        else
        {

            <QuickGrid Items="_items.AsQueryable()" Class="table table-secondary table-striped table-bordered">
                <PropertyColumn Property="@(i => i.Name)" Sortable="true" />
                <PropertyColumn Property="@(i=>i.Ean)" Sortable="true" />
                <PropertyColumn Property="@(i=>i.NetPrice)" Format="0.00 zł" Sortable="true" Title="Nett Price" />
                <PropertyColumn Property="@(i=>i.VatRate.Rate + " %")" Sortable="true" Title="Vat Rate" />
                <PropertyColumn Property="@(i=>i.GrossPrice)" Format="0.00 zł" Sortable="true" Title="Gross Price" />
                <PropertyColumn Property="@(i=>i.Quantity)" Sortable="true" Title="Quantity" />
                <PropertyColumn Property="@(i=>i.UnitOfMeasure.ShortName)" Sortable="true" Title="Unit" />
                <TemplateColumn Title="Actions">
                    <button class="btn btn-secondary" @onclick="(e => Edit(context.Id))">Edit</button>
                    <button class="btn btn-danger" @onclick="(e => Delete(context.Id))">Delete</button>
                </TemplateColumn>

            </QuickGrid>


        }
  
</div>


@code {
    private bool _addNewVisisble = false;
    int _itemId;
    Item _item = new Item();
    List<Item> _items = new List<Item>();
    protected override async Task OnInitializedAsync()
    {
        _items = await Service.GetUSerItemsAsync();
        _item = new Item();
    }
    private void AddNew()
    {
        _itemId = 0;
        _item = new Item();
        _addNewVisisble = true;

    }
    private async void Edit(int id)
    {
        _item = await Service.GetItemByIdAsync(id);
        _itemId = id;
        if (_item.Id == id)
        {
            _addNewVisisble = true;
        }
    }
    private async void Delete(int id)
    {
        _item = await Service.GetItemByIdAsync(id);
        if (_item.Id == id)
        {
            await Service.DeleteItemAsync(_item);
            await OnInitializedAsync();
            StateHasChanged();
        }
    }
    private async void ClickHandler()
    {
        _addNewVisisble = false;
        _items = await Service.GetUSerItemsAsync();
        StateHasChanged();
    }
}
