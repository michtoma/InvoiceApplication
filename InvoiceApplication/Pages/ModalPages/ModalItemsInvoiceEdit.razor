@inject IInvoiceItemService invItemService
@inject IVatRateService vatService
@inject IUnitOfMeasureService measurService
@if (isVisible)
{
    <div class="modal modal-dialog-centered" tabindex="-1" role="dialog" id="modalChoice">
        <div class="modal-dialog" role="dialog">
            <div class="modal-content rounded-3 shadow">
                <div class="modal-body p-4 text-center">
                    <h5 class="mb-0">Items Operations</h5>

                    <EditForm Model="item" OnValidSubmit="SubmitForm">
                        <DataAnnotationsValidator />
                        <div class="row">
                            <div style="display: none;">
                                <label for="id">Id</label>
                                <InputNumber id="id" @bind-Value="item.Id" class="form-control"></InputNumber>
                                <ValidationMessage For="@(() => item.Id)" />
                            </div>
                            <div class="col-8">
                                <label for="name">Name</label>
                                <InputText id="name" @bind-Value="item.Item.Name" class="form-control"></InputText>
                                <ValidationMessage For="@(() => item.Item.Name)" />
                            </div>
                        </div>
                        <div>
                            <label for="description">Description</label>
                            <InputTextArea id="description" @bind-Value="item.Description" class="form-control"></InputTextArea>
                            <ValidationMessage For="@(() => item.Description)" />
                        </div>
                        <div class="row">


                            <div class="col-6">
                                <label for="netPrice">NetPrice</label>
                                <InputNumber id="netPrice" @bind-Value="item.NetPrice" class="form-control"></InputNumber>
                                <ValidationMessage For="@(() => item.NetPrice)" />
                            </div>
                            <div class="col-6 ">
                                <label for="quantity">Quantity</label>
                                <InputNumber id="quantity" @bind-Value="item.Quantity" class="form-control"></InputNumber>
                                <ValidationMessage For="@(() => item.Quantity)" />
                            </div>

                        </div>
                        <div class="m-3">
                            <button type="submit" class="btn btn-primary">Update Invoice Item</button>
                            <button class="btn btn-dark" @onclick="Close">Close</button>
                        </div>
                    </EditForm>
                </div>
            </div>
        </div>
    </div>
}

@code {
    [Parameter]
    public EventCallback<MouseEventArgs> OnClickClose { get; set; }
    [Parameter]
    public InvoiceItems item { get; set; }
    [Parameter]
    public bool isVisible { get; set; }
    [Parameter]
    public bool wasEdited { get; set; }
    bool isNew = true;
    private async void SubmitForm()
    {

        await invItemService.UpdateInvoiceItemAsync(item);
        wasEdited = true;
        Close();

    }
    private async void Close()
    {
        isVisible = false;
        await OnClickClose.InvokeAsync();

    }
}
